/*
 * STM32F446RE_SPI_DRIVERS.h  // <-- FIX: Corrected typo F466 to F446
 *
 * Created on: Oct 21, 2025
 * Author: notty
 */
#include<stdint.h>
#include"stm32f446re.h"

// <-- FIX: Corrected typo F466 to F446
#ifndef STM32F446RE_SPI_DRIVERS_H_
#define STM32F446RE_SPI_DRIVERS_H_

typedef struct{
    // <-- STYLE: Changed 'Spi_DeviceMode' to 'SPI_DeviceMode' for consistency
	uint8_t SPI_DeviceMode;
	uint8_t BusConfig;
	uint8_t SCLK_Speed;
	uint8_t DFF;
	uint8_t CPOL;
	uint8_t CPHA;
	uint8_t SSM;
}SPI_Config_t;

typedef struct {
	SPI_RegDef_t *PSPIx;
	SPI_Config_t SPI_Config;
}SPI_Handle_t;

void SPI_PeriClockControl(SPI_RegDef_t *pSPIx,uint8_t EiorDi);
void SPI_Init(SPI_Handle_t *SPI_Handle);
void SPI_Dinit(SPI_RegDef_t *SPIx);
void SPI_SendData(SPI_RegDef_t *pSPIx,uint8_t *pTxBuffer,uint32_t Len);
void SPI_ReceiveData(SPI_RegDef_t *pSPIx,uint8_t *pRxBuffer,uint32_t Len);

void SPI_IRQConfig(uint8_t IRQNumber, uint8_t EnOrDi);
void SPI_IRQPriorityConfig(uint8_t IRQNumber, uint8_t IRQPriority);
void SPI_IRQHandling(SPI_Handle_t *SPI_Handle);
// SPI MODES
#define SPI_DEVICE_MODE_MASTER  1
#define spi_DEVICE_MODE_SLAVE   2

// BUS CONFIG
#define SPI_BUS_CONFIG_FD   1
#define SPI_BUS_CONFIG_HD   2
#define SPI_BUS_CONFIG_S_RXONLY  3


// CLOCK SPEED SPI
#define SPI_SCLK_SPEED_DIV2   0
#define SPI_SCLK_SPEED_DIV4   1
#define SPI_SCLK_SPEED_DIV8   2
#define SPI_SCLK_SPEED_DIV16   3
#define SPI_SCLK_SPEED_DIV32   4
#define SPI_SCLK_SPEED_DIV64   5
#define SPI_SCLK_SPEED_DIV128  6
#define SPI_SCLK_SPEED_DIV256  7

// DFF bits
#define SPI_DFF_8BITS  0
#define SPI_DFF_16BITS 1
// cpol
#define SPI_CPOL_HIGH 1
#define SPI_CPOL_LOW  0
// cpha
#define SPI_CPHA_HIGH 1
#define SPI_CPHA_LOW  0

#define SPI_SSM_DI 0
#define SPI_SSM_En 1

#endif /* STM32F446RE_SPI_DRIVERS_H_ */ // <-- FIX: Corrected typo F466 to F446
